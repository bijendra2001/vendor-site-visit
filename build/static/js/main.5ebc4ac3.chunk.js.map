{"version":3,"sources":["components/MultipleFileUpload/UploadFile.js","config.js","service/UserService.js","components/Constants.js","vendor/UploadForm.js","vendor/VendorView.js","analyst/DownloadTemplates.js","analyst/SendToARMS.js","analyst/AnalystView.js","authenticate/RenderForAuthenticate.js","components/App.js","index.js"],"names":["MAX_COUNT","UploadFiles","props","_useState","useState","_useState2","Object","slicedToArray","uploadedFiles","setUploadedFiles","_useState3","_useState4","fileLimit","setFileLimit","react_default","a","createElement","id","type","multiple","accept","onChange","e","files","uploaded","toConsumableArray","limitExceeded","some","file","findIndex","f","name","push","length","alert","concat","onSubmit","handleUploadFiles","Array","prototype","slice","call","target","disabled","className","map","BASE_API","process","_kc","Keycloak","url","issuer","realm","clientId","token","localStorage","getItem","UserService","initKeycloak","init","onLoad","flow","pkceMethod","then","auth","window","location","reload","setItem","login","refreshToken","tokenParsed","exp","timeSkew","updateToken","refreshed","console","debug","warn","Math","round","Date","getTime","isLoggedIn","RUBIX","GET","POST","DESC","PHOTOGRAPHS","SITE_VISIT_TATA_AIG","HTTP_HEADERS_FORMDATA","Content-Type","HTTP_HEADERS_RESPONSE_TYPE_ARRAYBUFFER","Accept","Authorization","HTTP_HEADERS_AUTHENTICATED_FORMDATA","HTTP_HEADERS_CONTENT_TYPE_LIST","UploadForm","useEffect","document","title","siteData","setSiteData","uploadedImage","setUploadedImage","postFormData","data","images","formData","FormData","i","capturedImages","append","Blob","JSON","stringify","axios","method","headers","credential","response","status","catch","err","log","reactstrap_module","preventDefault","for","placeholder","objectSpread","entityName","value","address","govtIdProofNo","locType","locTypeVisited","kindOfBuilding","noOfFloors","standardizeNoOfFloors","sizeOfPremises","standardizeSizeOfPremises","ownershipOfPremises","noOfEmployeesNoticed","standardizedNoOfEmployeesNoticed","nameBoardNoticed","otherComments","dateOnSiteVisit","nameOfPeopleMetWhileVisit","commentOfPeopleMetWhileVisit","nameOfFieldExecutive","rubixComments","resonForNegativeReport","UploadFile","App","md","vendor_UploadForm","DownloadTemplates","_ref","templateData","flag","download","template","templateName","responseType","blob","fileSaver","saveAs","siteVisitImageExcelTemplateUrl","message","color","onClick","siteVisitExcelTemplateUrl","SendToARMS","args","setSurveyData","surveyData","predefineTemplateFileName","templatedata","dataTemplateFileName","predefineSectionTemplate","dataSectionTemplate","modal","setModal","toggle","assign","isOpen","caseId","xs","defaultValue","AnalystView","getSiteVisitData","setSiteVisitData","siteList","setList","getSiteData","param","fetchData","pageNumber","pageSize","sortfield","sortDirection","keys","listOfData","recordList","tag","key","analyst_SendToARMS","analyst_DownloadTemplates","RenderForAuthenticate","analyst_AnalystView","react_router","exact","path","component","VendorView","RenderForAuthenticated","ReactDOM","render","react_router_dom","components_App","getElementById"],"mappings":"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","file":"static/js/main.5ebc4ac3.chunk.js","sourcesContent":["import { useState } from 'react';\r\nimport React  from 'react';\r\nconst MAX_COUNT = 7;\r\nfunction UploadFiles(props){\r\n\r\nconst [uploadedFiles, setUploadedFiles] = useState([])\r\nconst [fileLimit, setFileLimit] = useState(false);\r\n\r\nconst handleUploadFiles = files => {\r\n    const uploaded = [...uploadedFiles];\r\n    let limitExceeded = false;\r\n    files.some((file) => {\r\n        if (uploaded.findIndex((f) => f.name === file.name) === -1) {\r\n            uploaded.push(file);\r\n            if (uploaded.length === MAX_COUNT) setFileLimit(true);\r\n            if (uploaded.length > MAX_COUNT) {\r\n                alert(`You can only add ${MAX_COUNT} files`);\r\n                setFileLimit(false);\r\n                limitExceeded = true;\r\n                return true;\r\n            }\r\n        }\r\n    })\r\n    if (!limitExceeded){\r\n        setUploadedFiles(uploaded)\r\n        props.onSubmit(uploaded);\r\n    } \r\n}\r\n\r\nconst handleFileEvent =  (e) => {\r\n    const chosenFiles = Array.prototype.slice.call(e.target.files)\r\n    handleUploadFiles(chosenFiles);\r\n}\r\n\r\nreturn (\r\n    <div>\r\n        <input id='fileUpload' type='file' multiple\r\n                accept='image/jpg, image/png, image/jpeg'\r\n                onChange={handleFileEvent}\r\n                disabled={fileLimit}\r\n        />\r\n        <div className=\"uploaded-files-list\">\r\n            {uploadedFiles.map(file => (\r\n                <div >\r\n                    {file.name}\r\n                </div>\r\n            ))}\r\n        </div>\r\n    </div>\r\n);\r\n}\r\n\r\nexport default UploadFiles;\r\n","export const BASE_API = process.env.REACT_APP_RESOURCE_URL;\r\nexport const AUTH_API = process.env.REACT_APP_AUTH_URL;\r\nexport const ISSUER_API = process.env.REACT_APP_AUTH_ISSUER_URL;","import Keycloak from \"keycloak-js\";\nimport {AUTH_API,ISSUER_API} from \"../config\";\n\nconst _kc = new Keycloak(({\n    url: `${AUTH_API}`,\n    issuer:`${ISSUER_API}`,\n    realm: 'vendor-site-visit',\n    clientId: 'vendor_site_visit_client'\n}));\n\n const initKeycloak = () => {\n  _kc.init({ onLoad: 'login-required',\n             flow: 'implicit',\n             pkceMethod: 'S256', }).then((auth) => {\n    if (!auth) {\n        window.location.reload();\n    }\n\n    localStorage.setItem(\"bearer-token\", _kc.token);\n    localStorage.setItem(\"login\", _kc.login);\n    localStorage.setItem(\"refresh-token\", _kc.refreshToken);\n    localStorage.setItem(\"token-parsed\", _kc.tokenParsed.exp);\n    localStorage.setItem(\"time-skew\", _kc.timeSkew);\n  })\n};\n\nconst updateToken = () => {\n  _kc.updateToken(60).then((refreshed) =>{\n    if(!refreshed){\n        console.warn('Token not refreshed, valid for '\n        + Math.round( _kc.tokenParsed.exp + _kc.timeSkew - new Date().getTime() / 1000) + ' seconds');\n    }\n    else{\n      console.debug('Token refreshed' + refreshed);\n    }\n  })\n};\n\nconst token = localStorage.getItem(\"bearer-token\", _kc.token);\nconst isLoggedIn = !!token;\n\nconst UserService = {\n  initKeycloak,\n  updateToken,\n  isLoggedIn,\n  token,\n};\n\nexport default UserService;","import UserService from '../service/UserService';\r\n\r\nexport const RUBIX = \"Rubix\";\r\n\r\nexport const GET = \"GET\";\r\nexport const POST = \"POST\";\r\n\r\nexport const DESC = \"DESC\";\r\n\r\nexport const VENDOR_SITE_VISIT=\"vendor-site-visit\";\r\nexport const VENDOR_SITE_VISIT_CLIENT=\"vendor_site_visit_client\";\r\n\r\n//Template Tag Name\r\nexport const PHOTOGRAPHS = \"photographs\";\r\nexport const SITE_VISIT_TATA_AIG = \"SiteVisitforTATAAIG\";\r\n\r\nexport const HTTP_HEADERS_FORMDATA = {\r\n    'Content-Type': 'multipart/form-data'\r\n};\r\n\r\nexport const HTTP_HEADERS_RESPONSE_TYPE_ARRAYBUFFER = {\r\n    'Accept': 'application/json',\r\n    'Content-Type': 'application/octet-stream',\r\n    'Authorization': `Bearer ${UserService.token}`\r\n};\r\n\r\nexport const HTTP_HEADERS_AUTHENTICATED_FORMDATA = {\r\n    'Content-Type': 'multipart/form-data',\r\n    'Authorization': `Bearer ${UserService.token}`\r\n};\r\n\r\nexport const HTTP_HEADERS_CONTENT_TYPE_LIST = {\r\n    'Content-Type': 'application/json',\r\n    'Authorization': `Bearer ${UserService.token}`\r\n}\r\n\r\n\r\nexport const HTTP_RESPONSE_TYPE_ARRAYBUFFER = 'arraybuffer';","import React, { useEffect ,useState} from 'react';\r\nimport {Form,FormGroup,Label,Input,Button,Container} from 'reactstrap';\r\nimport axios from 'axios';\r\nimport UploadFiles from '../components/MultipleFileUpload/UploadFile';\r\nimport {RUBIX , HTTP_HEADERS_FORMDATA,POST} from '../components/Constants';\r\nimport {BASE_API} from '../config';\r\nconst UploadForm = ()=> {\r\n\r\n    useEffect(()=>{\r\n        document.title = RUBIX;\r\n    },[]);\r\n\r\n    const [siteData, setSiteData] = useState({});\r\n    const [uploadedImage,setUploadedImage] = useState([]);\r\n\r\n    const handleForm = (e) =>{\r\n        postFormData(siteData,uploadedImage);\r\n       e.preventDefault();\r\n    }\r\n\r\n    const emptyField=()=>{\r\n        setUploadedImage([]);\r\n        setSiteData({});\r\n    }\r\n\r\n    const postFormData=(data,images)=>{\r\n        let formData = new FormData(); \r\n        for(let i=0;i<images.capturedImages.length;i++){\r\n            formData.append(\"capturedImages\",images.capturedImages[i]);\r\n        }\r\n        formData.append('siteData',\r\n        new Blob([JSON.stringify(data)], { \r\n          type: 'application/json'\r\n        }));\r\n        \r\n        return axios({\r\n            method: POST,\r\n            url: `${BASE_API}/vendor/form`,\r\n            data: formData,\r\n            headers: HTTP_HEADERS_FORMDATA,\r\n            credential:true\r\n        }).then(response => {\r\n            if(response.status===200){\r\n                emptyField();\r\n                alert(\"Submited !!\")\r\n                window.location.reload();\r\n            }\r\n        }\r\n        ).catch(err => console.log(err));        \r\n    };\r\n\r\n    const uploadedFiles=(files)=>{\r\n        setUploadedImage({...uploadedImage,capturedImages:files}); \r\n    }\r\n    \r\n    return (\r\n        <div className='p-2 mt-3'>\r\n            <Form onSubmit={handleForm}>\r\n                 <FormGroup >\r\n                    <Label for=\"entityName\">Entity Name</Label>\r\n                    <Input id=\"entityName\" name=\"entityName\" placeholder=\"Enter Entity Name\" type=\"text\"\r\n                    onChange={(e)=>{\r\n                        setSiteData({...siteData,entityName:e.target.value});\r\n                    }}\r\n                />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                    <Label for=\"addressVisited\">Address Visited</Label>\r\n                    <Input id=\"addressVisited\" name=\"addressVisited\" placeholder=\"Enter Address Visited\" type=\"text\"\r\n                    onChange={(e)=>{\r\n                        setSiteData({...siteData,address:e.target.value});\r\n                    }}\r\n                />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                    <Label for=\"govtIdProofNo\">PAN/CIN/GST</Label>\r\n                    <Input id=\"govtIdProofNo\" name=\"govtIdProofNo\" placeholder=\"Enter PAN/CIN/GST\" type=\"text\"\r\n                    onChange={(e)=>{\r\n                        setSiteData({...siteData,govtIdProofNo:e.target.value});\r\n                    }}/>\r\n                </FormGroup>\r\n                <FormGroup>\r\n                    <Label for=\"typeOfLocation\">Type of Location </Label>\r\n                    <Input id=\"typeOfLocation\" name=\"select\" type=\"select\"\r\n                    onChange={(e)=>{\r\n                        setSiteData({...siteData,locType:e.target.value});\r\n                    }}\r\n                    >\r\n                    <option>Select</option>\r\n                    <option>Residential</option>\r\n                    <option>Commercial</option>\r\n                    <option>Industrial</option>\r\n                    <option>Rural</option>\r\n                    <option>Residential Cum Commercial</option></Input>\r\n                </FormGroup>\r\n                <FormGroup>\r\n                    <Label for=\"typeOfLocationOfTheAddressVisited\"> Type of Location of the Address Visited </Label>\r\n                    <Input id=\"typeOfLocationOfTheAddressVisited\" name=\"select\" type=\"select\"\r\n                    onChange={(e)=>{\r\n                        setSiteData({...siteData,locTypeVisited:e.target.value});\r\n                    }}>\r\n                    <option>Select</option>\r\n                    <option>Residential</option>\r\n                    <option>Commercial</option>\r\n                    <option>Industrial</option>\r\n                    <option>Rural</option>\r\n                    </Input>\r\n                </FormGroup>\r\n                <FormGroup>\r\n                    <Label for=\"kindOfBuilding\"> Kind of Building </Label>\r\n                    <Input id=\"kindOfBuilding\" name=\"select\" type=\"select\"\r\n                    onChange={(e)=>{\r\n                        setSiteData({...siteData,kindOfBuilding:e.target.value});\r\n                    }}>\r\n                    <option>Select</option>\r\n                    <option>Permanent</option>\r\n                    <option>Temporary</option>\r\n                    <option>Hutment</option></Input>\r\n                </FormGroup>\r\n                <FormGroup>\r\n                    <Label for=\"numberOfFloors\">Number of Floors</Label>\r\n                    <Input id=\"numberOfFloors\" name=\"numberOfFloors\" placeholder=\"Enter Number of Floors\" type=\"text\"\r\n                    onChange={(e)=>{\r\n                        setSiteData({...siteData,noOfFloors:e.target.value});\r\n                    }}/>\r\n                </FormGroup>\r\n                <FormGroup>\r\n                    <Label for=\"standardizedNumberOfFloors\"> Standardized Number of Floors </Label>\r\n                    <Input id=\"standardizedNumberOfFloors\" name=\"select\" type=\"select\"\r\n                    onChange={(e)=>{\r\n                        setSiteData({...siteData,standardizeNoOfFloors:e.target.value});\r\n                    }}>\r\n                    <option>Select</option>\r\n                    <option>Single Storey</option>\r\n                    <option>Multi Floors</option>\r\n                    <option>Not Ascertained</option></Input>\r\n                </FormGroup>\r\n                <FormGroup>\r\n                    <Label for=\"sizeOfPremises\">Size of Premises</Label>\r\n                    <Input id=\"sizeOfPremises\" name=\"sizeOfPremises\" placeholder=\"Enter Size of Premises\" type=\"text\"\r\n                    onChange={(e)=>{\r\n                        setSiteData({...siteData,sizeOfPremises:e.target.value});\r\n                    }}/>\r\n                </FormGroup>\r\n                <FormGroup>\r\n                    <Label for=\"standardizedSizeOfPremises\"> Standardized Size of Premises </Label>\r\n                    <Input id=\"standardizedSizeOfPremises\" name=\"select\" type=\"select\"\r\n                    onChange={(e)=>{\r\n                        setSiteData({...siteData,standardizeSizeOfPremises:e.target.value});\r\n                    }}>\r\n                    <option>Select</option>\r\n                    <option>Less Than 250 Square feet</option>\r\n                    <option>250 To 500 Square Feet</option>\r\n                    <option>500 To 1000 Square Feet</option>\r\n                    <option>1000 To 5000 Square Feet</option>\r\n                    <option>5000 Square Feet And Above</option>\r\n                    <option>Not Ascertained</option></Input>\r\n                </FormGroup>\r\n                <FormGroup>\r\n                    <Label for=\"ownershipOfPremises\"> Ownership of Premises </Label>\r\n                    <Input id=\"ownershipOfPremises\" name=\"select\" type=\"select\"\r\n                    onChange={(e)=>{\r\n                        setSiteData({...siteData,ownershipOfPremises:e.target.value});\r\n                    }}>\r\n                    <option>Select</option>\r\n                    <option>Owned</option>\r\n                    <option>Rented/ Leased</option>\r\n                    <option>Not Ascertained</option></Input>\r\n                </FormGroup>\r\n                <FormGroup>\r\n                    <Label for=\"numberOfEmployeesNoticed\"> Number of Employees noticed </Label>\r\n                    <Input id=\"numberOfEmployeesNoticed\" name=\"select\" placeholder=\"Enter Number of Employees noticed\" type=\"text\"\r\n                    onChange={(e)=>{\r\n                        setSiteData({...siteData,noOfEmployeesNoticed:e.target.value});\r\n                    }}/>\r\n                </FormGroup>\r\n                <FormGroup>\r\n                    <Label for=\"numberOfEmployeesNoticed\"> Standardized Number of Employees noticed </Label>\r\n                    <Input id=\"numberOfEmployeesNoticed\" name=\"select\" type=\"select\"\r\n                    onChange={(e)=>{\r\n                        setSiteData({...siteData,standardizedNoOfEmployeesNoticed:e.target.value});\r\n                    }}>\r\n                    <option>Select</option>\r\n                    <option>Less Than 25</option>\r\n                    <option>25 To 100</option>\r\n                    <option>100 To 500</option>\r\n                    <option>Above 500</option>\r\n                    <option>Not Ascertained</option></Input>\r\n                </FormGroup>\r\n                <FormGroup>\r\n                    <Label for=\"nameBoardNoticed\"> Name Board Noticed </Label>\r\n                    <Input id=\"nameBoardNoticed\" name=\"select\" type=\"select\"\r\n                    onChange={(e)=>{\r\n                        setSiteData({...siteData,nameBoardNoticed:e.target.value});\r\n                    }}>\r\n                    <option>Select</option>\r\n                    <option>Yes</option>\r\n                    <option>No</option></Input>\r\n                </FormGroup>\r\n                <FormGroup>\r\n                    <Label for=\"otherComments\"> Other Comments</Label>\r\n                    <Input id=\"otherComments\" name=\"text\" type=\"textarea\"\r\n                    onChange={(e)=>{\r\n                        setSiteData({...siteData,otherComments:e.target.value});\r\n                    }}/>\r\n                </FormGroup>\r\n                <FormGroup>\r\n                    <Label for=\"exampleDate\">Date</Label>\r\n                    <Input id=\"dateOnSiteVisit\" name=\"date\" placeholder=\"date placeholder\" type=\"date\"\r\n                    onChange={(e)=>{\r\n                        setSiteData({...siteData,dateOnSiteVisit:e.target.value});\r\n                    }}/>\r\n                </FormGroup>\r\n                <FormGroup>\r\n                    <Label for=\"nameOfPeopleMetDuringVisit\">Name of People met during Visit</Label>\r\n                    <Input id=\"nameOfPeopleMetDuringVisit\" name=\"nameOfPeopleMetDuringVisit\" placeholder=\"Enter Name of People met during Visit\" type=\"text\"\r\n                    onChange={(e)=>{\r\n                        setSiteData({...siteData,nameOfPeopleMetWhileVisit:e.target.value});\r\n                    }}/>\r\n                </FormGroup>\r\n                <FormGroup>\r\n                    <Label for=\"commentsOfPeopleMetDuringVisit\"> Comments of People met during Visit</Label>\r\n                    <Input id=\"commentsOfPeopleMetDuringVisit\" name=\"text\" type=\"textarea\"\r\n                    onChange={(e)=>{\r\n                        setSiteData({...siteData,commentOfPeopleMetWhileVisit:e.target.value});\r\n                    }}/>\r\n                </FormGroup>\r\n                <FormGroup>\r\n                    <Label for=\"nameOfFieldExecutive\">Name of Field Executive</Label>\r\n                    <Input id=\"nameOfFieldExecutive\" name=\"nameOfFieldExecutive\" placeholder=\"Enter Name of Field Executive\" type=\"text\"\r\n                    onChange={(e)=>{\r\n                        setSiteData({...siteData,nameOfFieldExecutive:e.target.value});\r\n                    }}/>\r\n                </FormGroup>\r\n                <FormGroup>\r\n                    <Label for=\"exampleSelect\"> Rubix Comments </Label>\r\n                    <Input id=\"exampleSelect\" name=\"select\" type=\"select\"\r\n                    onChange={(e)=>{\r\n                        setSiteData({...siteData,rubixComments:e.target.value});\r\n                    }}>\r\n                    <option>Select</option>\r\n                    <option>Positive</option>\r\n                    <option>Negative</option></Input>\r\n                </FormGroup>\r\n                <FormGroup>\r\n                    <Label for=\"reasonsForNegativeReport\">Reasons for Negative Report</Label>\r\n                    <Input id=\"reasonsForNegativeReport\" name=\"select\" type=\"select\"\r\n                    onChange={(e)=>{\r\n                        setSiteData({...siteData,resonForNegativeReport:e.target.value});\r\n                    }}>\r\n                    <option>Select</option>\r\n                    <option>Address Changed</option>\r\n                    <option>Entity Not Found</option>\r\n                    <option>Incomplete Address</option>\r\n                    <option>Location Not Traceable</option>\r\n                    <option>Not Applicable</option></Input>\r\n                </FormGroup>\r\n                <UploadFiles onSubmit={uploadedFiles}/>\r\n                <Container className='text-center'>\r\n                    <Button type=\"submit\" className='primary'>Submit</Button>\r\n                </Container> \r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UploadForm;","import UploadForm from '../vendor/UploadForm';\r\nimport { Row,Col } from 'reactstrap';\r\nimport React from 'react';\r\nfunction App() {\r\n    return (\r\n      <div>\r\n        <Row>\r\n        <Col md={3}></Col>\r\n        <Col md={6} className=\"bg-info text-center\">\r\n          <h1>Rubix Data Science</h1>\r\n        </Col>\r\n        <Col md={3}></Col>\r\n        </Row>\r\n        <Row>\r\n          <Col md={3}></Col>\r\n          <Col md={6} className=\"bg-light\">\r\n          <UploadForm />\r\n          </Col>\r\n          <Col md={3}></Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  export default App;","import axios from 'axios';\r\nimport {Button} from 'reactstrap';\r\nimport React from 'react';\r\nimport fileSaver from 'file-saver';\r\nimport {BASE_API} from '../config';\r\nimport {HTTP_HEADERS_RESPONSE_TYPE_ARRAYBUFFER, HTTP_RESPONSE_TYPE_ARRAYBUFFER,GET} from \"../components/Constants\";\r\n\r\nconst DownloadTemplates =({templateData})=>{\r\n    let flag = true;\r\n    const downloadTemplate=()=>{\r\n        download(templateData.siteVisitExcelTemplateUrl);\r\n    }\r\n\r\n    const download=(template)=>{\r\n        \r\n        const templateName = []\r\n        templateName.push(template);\r\n        \r\n        return axios({\r\n            method: GET,\r\n            url: `${BASE_API}/analyst/download/template/${templateName}`,\r\n            headers: HTTP_HEADERS_RESPONSE_TYPE_ARRAYBUFFER,\r\n            responseType:HTTP_RESPONSE_TYPE_ARRAYBUFFER,\r\n            credential:true\r\n        }).then(response => {\r\n            var blob = new Blob([response.data],\r\n                 { type: 'application/octet-stream' });\r\n            fileSaver.saveAs(blob, templateName);\r\n            if(response.status===200 && flag===true){\r\n                download(templateData.siteVisitImageExcelTemplateUrl);\r\n                flag = false;  \r\n            }\r\n        }).catch(err => {alert(err.message);});\r\n    }\r\n\r\n    return(\r\n        <div><Button color=\"primary\" download=\"true\" onClick={downloadTemplate}>Download</Button></div>\r\n    )\r\n}\r\n\r\nexport default DownloadTemplates;","import { FormGroup,Label,Input, Row,Button, Modal, ModalHeader, ModalBody, ModalFooter, Col } from 'reactstrap';\r\nimport React, { useState,useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport {HTTP_HEADERS_AUTHENTICATED_FORMDATA,POST,PHOTOGRAPHS,SITE_VISIT_TATA_AIG} from '../components/Constants';\r\nimport {BASE_API} from '../config';\r\nfunction SendToARMS(args){\r\n\r\n  useEffect(()=>{ \r\n    setSurveyData(surveyData => ({ ...surveyData, predefineTemplateFileName:args.templatedata.siteVisitImageExcelTemplateUrl}))\r\n    setSurveyData(surveyData => ({ ...surveyData, dataTemplateFileName:args.templatedata.siteVisitExcelTemplateUrl}))\r\n    setSurveyData(surveyData => ({ ...surveyData, predefineSectionTemplate:PHOTOGRAPHS}))\r\n    setSurveyData(surveyData => ({ ...surveyData, dataSectionTemplate:SITE_VISIT_TATA_AIG}))\r\n  },[]);\r\n\r\n  const [surveyData, setSurveyData] = useState({});\r\n  const [modal, setModal] = useState(false);\r\n\r\n  const toggle = () => {\r\n    setModal(!modal)\r\n  };\r\n\r\n  const upload = () => {\r\n    \r\n    let formData = new FormData();\r\n    formData.append('surveyData',\r\n        new Blob([JSON.stringify(surveyData)], { \r\n          type: 'application/json'\r\n    }));\r\n   \r\n    return axios({\r\n      method: POST,\r\n      url: `${BASE_API}/survey/submit`,\r\n      data: formData,\r\n      headers: HTTP_HEADERS_AUTHENTICATED_FORMDATA,\r\n      credential:true\r\n      }).then(response => {\r\n       if(response.status===200){\r\n        toggle();\r\n       }\r\n    }).catch(err =>{\r\n       alert(err.message);\r\n    }); \r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button color=\"success\" onClick={toggle}>Share</Button>\r\n      <Modal isOpen={modal} toggle={toggle} {...args}>\r\n        <ModalHeader toggle={toggle}>Share Template on ARMS</ModalHeader>\r\n        <ModalBody>\r\n          <div>\r\n            <Row>\r\n              <Col>\r\n                <FormGroup>\r\n                    <Label for=\"csaeId\">Case Id</Label>\r\n                    <Input id=\"caseId\" name=\"caseId\" placeholder=\"Enter Case Id\" type=\"text\"\r\n                    onChange={(e)=>{\r\n                      setSurveyData({...surveyData,caseId:e.target.value});\r\n                    }}/>\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n            <Row xs=\"2\">\r\n              <Col>\r\n                <FormGroup>\r\n                    <Label for=\"predefineSectionTemplate\">Predefined Type Tag Name</Label>\r\n                    <Input id=\"predefineSectionTemplate\" name=\"predefineSectionTemplate\" type=\"text\" value={surveyData.predefineSectionTemplate} defaultValue=\"photographs\"\r\n                    onChange={(e)=>{\r\n                      setSurveyData({...surveyData,predefineSectionTemplate:e.target.value});\r\n                    }}/>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col>\r\n                <FormGroup>\r\n                    <Label for=\"dataSectionTemplate\">Data Type Tag Name</Label>\r\n                    <Input id=\"dataSectionTemplate\" name=\"dataSectionTemplate\" type=\"text\" value={surveyData.dataSectionTemplate} defaultValue=\"SiteVisitforTATAAIG\"\r\n                    onChange={(e)=>{\r\n                      setSurveyData({...surveyData,dataSectionTemplate:e.target.value});\r\n                    }}/>\r\n                </FormGroup>            \r\n              </Col>\r\n            </Row>\r\n          </div>  \r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"primary\" onClick={upload}>Upload To ARMS</Button>\r\n          <Button color=\"secondary\" onClick={toggle}>Cancel</Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SendToARMS;","import { useEffect,useState } from 'react';\r\nimport { Card,CardHeader,CardBody,CardTitle,Table } from 'reactstrap';\r\nimport DownloadTemplates from './DownloadTemplates'\r\nimport SendToARMS from './SendToARMS'\r\nimport axios from 'axios';\r\nimport React from 'react';\r\nimport {DESC,HTTP_HEADERS_CONTENT_TYPE_LIST,GET,RUBIX} from '../components/Constants';\r\nimport {BASE_API} from '../config';\r\nfunction AnalystView() {\r\n    \r\n    const [getSiteVisitData, setSiteVisitData] = useState({})\r\n    const [siteList, setList] = useState([])\r\n\r\n    useEffect(()=>{ \r\n        document.title = RUBIX;\r\n        getSiteData(param);\r\n        fetchData(getSiteVisitData);\r\n    },[]);\r\n\r\n    useEffect(()=>{ \r\n        if(getSiteVisitData === null){\r\n            getSiteData(param);\r\n        }\r\n        fetchData(getSiteVisitData);\r\n    },[getSiteVisitData]);\r\n\r\n    const param={\r\n        pageNumber : 0,\r\n        pageSize : 10000,\r\n        sortfield : \"dataOnSubmit\",\r\n        sortDirection : DESC\r\n    }\r\n\r\n    const getSiteData = (param) => { \r\n        return axios({\r\n            method: GET,\r\n            url: `${BASE_API}/analyst/fetch/${param.pageNumber}/${param.pageSize}/sort/${param.sortfield}/${param.sortDirection}`,\r\n            headers: HTTP_HEADERS_CONTENT_TYPE_LIST,\r\n            credential:true\r\n        }).then(response =>{ const data = response.data;\r\n            setSiteVisitData(data)\r\n        }\r\n        ).catch(err => {\r\n            if(err.status === 401){\r\n                getSiteData();\r\n            }\r\n        });\r\n    }\r\n\r\n    const fetchData=(data)=>{\r\n         if(Object.keys(data).length !== 0){\r\n             const listOfData = data.recordList\r\n             setList(listOfData)\r\n         }\r\n    } \r\n\r\n    return (\r\n        <div>   \r\n        <Card>\r\n            <CardHeader>Rubix Data Science</CardHeader>\r\n                <CardBody>\r\n                    <CardTitle tag=\"h5\">Site Visit Servey List</CardTitle>\r\n                    <Table>\r\n                        <thead>\r\n                        <tr>\r\n                            <th>Entity Name</th>\r\n                            <th>Address Visited</th>\r\n                            <th>PAN/CIN/GST</th>\r\n                            <th>Site Visit Date</th>\r\n                            <th>Share</th>\r\n                            <th>Download</th>\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                             {siteList.map(data=>(\r\n                                <tr key={data.id}>\r\n                                    <td>{data.entityName}</td>\r\n                                    <td>{data.address}</td>\r\n                                    <td>{data.govtIdProofNo}</td>\r\n                                    <td>{data.dateOnSiteVisit}</td>\r\n                                    <td><SendToARMS templatedata={data}/></td>\r\n                                    <td><DownloadTemplates templateData={data}/></td>\r\n                                </tr>\r\n                            ))}  \r\n                        </tbody>\r\n                    </Table>\r\n                </CardBody>\r\n        </Card>\r\n        </div>\r\n    );\r\n  }\r\n  \r\n  export default AnalystView;","import UserService from '../service/UserService';\r\nimport { useEffect } from 'react';\r\nimport AnalystView from '../analyst/AnalystView';\r\nimport React  from 'react';\r\nfunction RenderForAuthenticate(){\r\n\r\n    useEffect(()=>{\r\n        UserService.initKeycloak();    \r\n    },[]);\r\n\r\n    return(\r\n        <AnalystView/>\r\n    );\r\n}\r\n\r\nexport default RenderForAuthenticate;","\nimport VendorView from '../vendor/VendorView';\nimport { Route,Switch } from 'react-router-dom';\nimport RenderForAuthenticated from '../authenticate/RenderForAuthenticate';\nimport React from 'react';\n\nfunction App() {\n\n  const Error=()=>{\n    return<h1>Opps page not found !!</h1>;\n  };\n\n  return (  \n        <Switch>\n          <Route exact path='/vendor' component={VendorView}/>  \n          <Route path=\"/analyst\" component={RenderForAuthenticated}/>\n          <Route component={Error}/>\n        </Switch>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport  ReactDOM  from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n    <BrowserRouter>\n        <App/> \n    </BrowserRouter>,\ndocument.getElementById('root'));"],"sourceRoot":""}